// <auto-generated />
using System;
using BlazorREPRODEV.App.Server;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BlazorREPRODEV.App.Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210617135144_recreatesometables")]
    partial class recreatesometables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BlazorREPRODEV.App.Shared.Models.ComponentSubject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SubjectId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.ToTable("ComponentSubjects");
                });

            modelBuilder.Entity("BlazorREPRODEV.App.Shared.Models.DatabaseConfig", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateLoaded")
                        .HasColumnType("datetime2");

                    b.Property<int>("InitialDataLoaded")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DatabaseConfigs");
                });

            modelBuilder.Entity("BlazorREPRODEV.App.Shared.Models.Exam", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExamName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsLive")
                        .HasColumnType("int");

                    b.Property<int>("MinutesDuration")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Exams");
                });

            modelBuilder.Entity("BlazorREPRODEV.App.Shared.Models.ExamQuestion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ExamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("QuestionDataId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ExamId");

                    b.HasIndex("QuestionDataId");

                    b.ToTable("ExamQuestions");
                });

            modelBuilder.Entity("BlazorREPRODEV.App.Shared.Models.ExamRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateTaken")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ExamDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<Guid?>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ExamDataId");

                    b.HasIndex("StudentId");

                    b.ToTable("ExamRecords");
                });

            modelBuilder.Entity("BlazorREPRODEV.App.Shared.Models.ExamStudentRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ExamRecordId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IsCorrect")
                        .HasColumnType("int");

                    b.Property<Guid>("QuestionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("ExamStudentRecord");
                });

            modelBuilder.Entity("BlazorREPRODEV.App.Shared.Models.Question", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Choice1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Choice2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Choice3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Choice4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ComponentSubjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CorrectAnswer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<int>("InActive")
                        .HasColumnType("int");

                    b.Property<string>("MyQuestion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ComponentSubjectId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("BlazorREPRODEV.App.Shared.Models.RegisteredStudent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IsAccepted")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("RegisteredStudents");
                });

            modelBuilder.Entity("BlazorREPRODEV.App.Shared.Models.Subject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Percentage")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("BlazorREPRODEV.App.Shared.Models.UserAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateLastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateRegistered")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InActive")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastLoggedIn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserAccounts");
                });

            modelBuilder.Entity("BlazorREPRODEV.App.Shared.Models.ComponentSubject", b =>
                {
                    b.HasOne("BlazorREPRODEV.App.Shared.Models.Subject", null)
                        .WithMany("ComponentSubjects")
                        .HasForeignKey("SubjectId");
                });

            modelBuilder.Entity("BlazorREPRODEV.App.Shared.Models.ExamQuestion", b =>
                {
                    b.HasOne("BlazorREPRODEV.App.Shared.Models.Exam", null)
                        .WithMany("ExamQuestions")
                        .HasForeignKey("ExamId");

                    b.HasOne("BlazorREPRODEV.App.Shared.Models.Question", "QuestionData")
                        .WithMany()
                        .HasForeignKey("QuestionDataId");

                    b.Navigation("QuestionData");
                });

            modelBuilder.Entity("BlazorREPRODEV.App.Shared.Models.ExamRecord", b =>
                {
                    b.HasOne("BlazorREPRODEV.App.Shared.Models.Exam", "ExamData")
                        .WithMany()
                        .HasForeignKey("ExamDataId");

                    b.HasOne("BlazorREPRODEV.App.Shared.Models.RegisteredStudent", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId");

                    b.Navigation("ExamData");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("BlazorREPRODEV.App.Shared.Models.Question", b =>
                {
                    b.HasOne("BlazorREPRODEV.App.Shared.Models.ComponentSubject", null)
                        .WithMany("Questions")
                        .HasForeignKey("ComponentSubjectId");
                });

            modelBuilder.Entity("BlazorREPRODEV.App.Shared.Models.RegisteredStudent", b =>
                {
                    b.HasOne("BlazorREPRODEV.App.Shared.Models.UserAccount", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("BlazorREPRODEV.App.Shared.Models.ComponentSubject", b =>
                {
                    b.Navigation("Questions");
                });

            modelBuilder.Entity("BlazorREPRODEV.App.Shared.Models.Exam", b =>
                {
                    b.Navigation("ExamQuestions");
                });

            modelBuilder.Entity("BlazorREPRODEV.App.Shared.Models.Subject", b =>
                {
                    b.Navigation("ComponentSubjects");
                });
#pragma warning restore 612, 618
        }
    }
}
