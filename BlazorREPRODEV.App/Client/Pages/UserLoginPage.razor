@page "/authentication"
@code {
    UserAccount user = new UserAccount();

    void ShowPassword()
    {
        input = input == InputType.Password ? InputType.Text : InputType.Password;
    }
    InputType input = InputType.Password;

    bool IsLoggingIn = false;

    private async Task SignInClick()
    {
        IsLoggingIn = true;
        StateHasChanged();
        var rs = await http.PostAsJsonAsync<UserAccount>($"{nav.BaseUri}api/Account/SignIn", user);
        
        if (rs.IsSuccessStatusCode)
        {
            var result = await rs.Content.ReadFromJsonAsync<UserAccount>();
            if(result != null && !string.IsNullOrEmpty(result.Id.ToString()))
            {
                await Core.GetInstance().SetUser(localStorage, result);
                await Task.Delay(1000);
                snackbar.Configuration.SnackbarVariant = Variant.Outlined;
                snackbar.Add($"Welcome back {result.FirstName}!", Severity.Success);
                nav.NavigateTo($"{nav.BaseUri}", true);
                return;
            }
        }
        IsLoggingIn = false;
        loginStatus = "Username or password is incorrect.";
        StateHasChanged();
    }
    public string loginStatus { get; set; }

    public async Task OnKeyUp(KeyboardEventArgs e)
    {
        if (e.Code == "Enter")
        {
            await SignInClick();
        }
    }
}

<div class="row">
    <div class="col-xl-5 mx-auto pt-5">
        <MudPaper Elevation="2" Class="p-3 m-3">
            <MudToolBar Class="align-middle" Dense>
                <MudText Color="Color.Primary" GutterBottom Align="Align.Center" Typo="Typo.h5">
                    Authentication
                </MudText>
                <MudToolBarSpacer />
                <MudIcon Icon="@Icons.Material.Filled.Lock" Color="Color.Primary" />
            </MudToolBar>
            <MudDivider Class="m-2" />
            <MudTextField Disabled="IsLoggingIn"
                          OnKeyUp="OnKeyUp"
                          Required
                          Class="mb-3"
                          OnKeyPress="@(()=> { loginStatus = string.Empty; })"
                          @bind-Value="user.Username"
                          Label="Username"
                          InputType="InputType.Text" Immediate Variant="Variant.Outlined" />
            <MudTextField Disabled="IsLoggingIn"
                          OnKeyUp="OnKeyUp"
                          Required
                          Class="mb-3"
                          OnKeyPress="@(()=> { loginStatus = string.Empty; })"
                          @bind-Value="user.Password"
                          OnAdornmentClick="ShowPassword"
                          InputType="input"
                          Adornment="Adornment.End"
                          AdornmentIcon="@(input == InputType.Password ? Icons.Material.Outlined.Visibility : Icons.Material.Outlined.VisibilityOff)"
                          IconSize="Size.Small" Label="Password" Immediate Variant="Variant.Outlined" />
            @if (!string.IsNullOrEmpty(loginStatus))
            {
                <MudText GutterBottom Color="Color.Secondary" Typo="Typo.caption">@loginStatus</MudText>
            }
            <MudToolBar Dense>
                <MudButton OnClick="@(()=> nav.NavigateTo($"{nav.BaseUri}register"))" Size="Size.Small" Color="Color.Primary" Variant="Variant.Text">
                    Register new account
                </MudButton>
                <MudToolBarSpacer />
                <MudButton OnClick="SignInClick" Disabled="IsLoggingIn" StartIcon="@(IsLoggingIn ? Icons.Material.Filled.LockOpen : Icons.Material.Filled.Lock)" Variant="Variant.Filled" Color="Color.Primary">
                    @(IsLoggingIn ? "Signing In..." : "Sign In")
                </MudButton>
            </MudToolBar>
            @if (IsLoggingIn)
            {
                <p class="mt-3 mb-0 p-0">
                    <MudProgressLinear Color="Color.Primary" Indeterminate Size="Size.Large" />
                </p>
            }
        </MudPaper>
    </div>
</div>